name: CI pipeline to lint, test, build and release code in main branch

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Lint code
        run: pnpm run lint

      - name: Build code
        run: pnpm run build

      - name: Run tests
        run: pnpm run test

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/src/*

  build-linux:
    runs-on: ubuntu-latest
    needs: lint-test
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/src/

      - name: Build Linux binary
        run: pnpm exec pkg . --targets node16-linux-${{ matrix.arch }}

      - name: Upload Linux binary
        uses: actions/upload-artifact@v4
        with:
          name: matcha-linux-${{ matrix.arch }}
          path: bin/*

  build-macos:
    runs-on: macos-latest
    needs: lint-test
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/src/

      - name: Build macOS binary
        run: pnpm exec pkg . --targets node16-macos-${{ matrix.arch }}

      - name: Upload macOS binary
        uses: actions/upload-artifact@v4
        with:
          name: matcha-macos-${{ matrix.arch }}
          path: bin/*

  build-windows:
    runs-on: windows-latest
    needs: lint-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install -D

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist/src/

      - name: Build Windows binary
        run: pnpm exec pkg . --targets node16-win-x64

      - name: Upload Windows binary
        uses: actions/upload-artifact@v4
        with:
          name: matcha-windows-x64
          path: bin/*

  release:
    runs-on: ubuntu-latest
    needs: [build-linux, build-macos, build-windows]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Linux binaries x64
        uses: actions/download-artifact@v2
        with:
          name: matcha-linux-x64
          path: bin/
      - name: Download Linux binaries arm64
        uses: actions/download-artifact@v4
        with:
          name: matcha-linux-arm64
          path: bin/

      - name: Download macOS binaries x64
        uses: actions/download-artifact@v4
        with:
          name: matcha-macos-x64
          path: bin/
      - name: Download macOS binaries arm64
        uses: actions/download-artifact@v4
        with:
          name: matcha-macos-arm64
          path: bin/

      - name: Download Windows binaries x64
        uses: actions/download-artifact@v4
        with:
          name: matcha-windows-x64
          path: bin/

      - name: Get version from package.json
        id: get_version
        run: echo "PACKAGE_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            bin/matcha-linux-x64
            bin/matcha-linux-arm64
            bin/matcha-macos-x64
            bin/matcha-macos-arm64
            bin/matcha-windows-x64
        